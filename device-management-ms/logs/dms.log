2020-07-05 15:38:34,192 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:38:34,358 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 15:38:34,977 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 15:38:35,059 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=8436dc78-b00c-31cf-b9c1-10b95e20c142
2020-07-05 15:38:35,152 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:38:35,153 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:38:35,154 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:38:35,155 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:38:35,288 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8081 (http)
2020-07-05 15:38:35,293 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8081"]
2020-07-05 15:38:35,293 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 15:38:35,294 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 15:38:35,369 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 15:38:35,370 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1003 ms
2020-07-05 15:38:35,487 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 15:38:35,487 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 15:38:35,494 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@75120e58
2020-07-05 15:38:35,574 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:38:35,576 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:38:35,579 ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter [main] Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
2020-07-05 15:38:35,590 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-07-05 15:38:35,594 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-05 15:38:35,594 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:38:35,594 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:38:35,604 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-05 15:38:35,611 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.pmitseas.devicemgmt.DeviceMgmtApplication.main(DeviceMgmtApplication.java:20)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:467)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 53 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:787)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:143)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:133)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:122)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:116)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:874)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:778)
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	... 88 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 123 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:394)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:366)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7.stompBrokerRelayMessageHandler(<generated>)
	at org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport.webSocketMessageBrokerStats(WebSocketMessageBrokerConfigurationSupport.java:119)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7.CGLIB$webSocketMessageBrokerStats$12(<generated>)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7$$FastClassBySpringCGLIB$$c0900524.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7.webSocketMessageBrokerStats(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 124 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 147 common frames omitted
Caused by: java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:284)
	at org.springframework.messaging.simp.config.StompBrokerRelayRegistration.setRelayHost(StompBrokerRelayRegistration.java:78)
	at com.pmitseas.devicemgmt.WebSocketConfig.configureMessageBroker(WebSocketConfig.java:41)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration.configureMessageBroker(DelegatingWebSocketMessageBrokerConfiguration.java:112)
	at org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration.getBrokerRegistry(AbstractMessageBrokerConfiguration.java:239)
	at org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration.stompBrokerRelayMessageHandler(AbstractMessageBrokerConfiguration.java:321)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7.CGLIB$stompBrokerRelayMessageHandler$31(<generated>)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7$$FastClassBySpringCGLIB$$c0900524.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$d65a8bf7.stompBrokerRelayMessageHandler(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 148 common frames omitted
2020-07-05 15:39:20,534 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:39:20,696 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 15:39:21,218 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 15:39:21,293 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=8436dc78-b00c-31cf-b9c1-10b95e20c142
2020-07-05 15:39:21,373 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:39:21,373 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:39:21,374 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:39:21,375 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:39:21,493 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8081 (http)
2020-07-05 15:39:21,497 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8081"]
2020-07-05 15:39:21,498 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 15:39:21,498 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 15:39:21,588 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 15:39:21,588 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 884 ms
2020-07-05 15:39:21,698 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 15:39:21,698 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 15:39:21,704 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6c101cc1
2020-07-05 15:39:21,775 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:39:21,777 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:39:21,780 ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter [main] Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
2020-07-05 15:39:21,790 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-07-05 15:39:21,794 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020-07-05 15:39:21,794 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:39:21,794 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:39:21,804 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-05 15:39:21,811 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.pmitseas.devicemgmt.DeviceMgmtApplication.main(DeviceMgmtApplication.java:20)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:467)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 53 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.pmitseas.devicemgmt.DeviceMgmtApplication$UserCount': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:787)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:226)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:143)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:133)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:122)
	at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:116)
	at org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'deviceMgmtApplication': Unsatisfied dependency expressed through field 'defaultSimpUserRegistry'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:874)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:778)
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketConfig': Unsatisfied dependency expressed through field 'webSocketMessageBrokerStats'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	... 88 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'webSocketMessageBrokerStats' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.socket.config.WebSocketMessageBrokerStats]: Factory method 'webSocketMessageBrokerStats' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 123 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'stompBrokerRelayMessageHandler' defined in class path resource [org/springframework/web/socket/config/annotation/DelegatingWebSocketMessageBrokerConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:394)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:366)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92.stompBrokerRelayMessageHandler(<generated>)
	at org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport.webSocketMessageBrokerStats(WebSocketMessageBrokerConfigurationSupport.java:119)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92.CGLIB$webSocketMessageBrokerStats$11(<generated>)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92$$FastClassBySpringCGLIB$$5add2498.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92.webSocketMessageBrokerStats(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 124 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler]: Factory method 'stompBrokerRelayMessageHandler' threw exception; nested exception is java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	... 147 common frames omitted
Caused by: java.lang.IllegalArgumentException: relayHost must not be empty
	at org.springframework.util.Assert.hasText(Assert.java:284)
	at org.springframework.messaging.simp.config.StompBrokerRelayRegistration.setRelayHost(StompBrokerRelayRegistration.java:78)
	at com.pmitseas.devicemgmt.WebSocketConfig.configureMessageBroker(WebSocketConfig.java:41)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration.configureMessageBroker(DelegatingWebSocketMessageBrokerConfiguration.java:112)
	at org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration.getBrokerRegistry(AbstractMessageBrokerConfiguration.java:239)
	at org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration.stompBrokerRelayMessageHandler(AbstractMessageBrokerConfiguration.java:321)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92.CGLIB$stompBrokerRelayMessageHandler$29(<generated>)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92$$FastClassBySpringCGLIB$$5add2498.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration$$EnhancerBySpringCGLIB$$3d2d0a92.stompBrokerRelayMessageHandler(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 148 common frames omitted
2020-07-05 15:45:17,319 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:45:17,486 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 15:45:18,026 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 15:45:18,108 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=21d1df55-3901-3083-a8ea-f4c69c74a35d
2020-07-05 15:45:18,189 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:45:18,190 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:45:18,191 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:45:18,192 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 15:45:18,302 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-07-05 15:45:18,306 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-07-05 15:45:18,307 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 15:45:18,307 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 15:45:18,381 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 15:45:18,381 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 886 ms
2020-07-05 15:45:18,443 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 15:45:18,444 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 15:45:18,450 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3b48e183
2020-07-05 15:45:18,980 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:45:18,982 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:45:19,035 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 15:45:19,063 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'brokerChannelExecutor'
2020-07-05 15:45:19,190 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3663d0ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f1a9a53, org.springframework.security.web.header.HeaderWriterFilter@15d0d6c9, org.springframework.security.web.authentication.logout.LogoutFilter@4c3de38e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1bedc703, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2287395, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f8d9767, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@575cabf0, org.springframework.security.web.session.SessionManagementFilter@4c6a4ffd, org.springframework.security.web.access.ExceptionTranslationFilter@3fbe503c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@766a52f5]
2020-07-05 15:45:19,198 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 15:45:19,198 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 15:45:19,809 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-07-05 15:45:19,816 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-05 15:45:19,873 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-07-05 15:45:19,895 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-07-05 15:45:20,068 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-07-05 15:45:20,069 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-07-05 15:45:20,144 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-07-05 15:45:20,145 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-07-05 15:45:20,243 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-07-05 15:45:20,301 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-07-05 15:45:20,302 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-07-05 15:45:20,393 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-07-05 15:45:20,395 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-07-05 15:45:20,396 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 15:45:20,398 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1593944120398 with initial instances count: 3
2020-07-05 15:45:20,399 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status UP
2020-07-05 15:45:20,400 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593944120400, current=UP, previous=STARTING]
2020-07-05 15:45:20,401 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 15:45:20,401 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 15:45:20,401 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 15:45:20,402 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 15:45:20,402 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 15:45:20,402 INFO org.springframework.core.log.CompositeLog [main] Starting...
2020-07-05 15:45:20,402 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added StompBrokerRelay[localhost:61613]
2020-07-05 15:45:20,402 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added StompBrokerRelay[localhost:61613]
2020-07-05 15:45:20,419 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 15:45:20,420 INFO org.springframework.core.log.CompositeLog [main] Starting "system" session, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69b37f5c]]
2020-07-05 15:45:20,420 DEBUG org.springframework.core.log.CompositeLog [main] Forwarding CONNECT session=_system_
2020-07-05 15:45:20,569 INFO org.springframework.core.log.CompositeLog [main] Started.
2020-07-05 15:45:20,580 DEBUG org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] Connected to localhost/127.0.0.1:61613
2020-07-05 15:45:20,581 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-3] TCP connection opened in session=_system_
2020-07-05 15:45:20,611 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Received CONNECTED heart-beat=[10000, 10000] session=_system_
2020-07-05 15:45:20,612 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] "System" session connected.
2020-07-05 15:45:20,613 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] BrokerAvailabilityEvent[available=true, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69b37f5c]]]
2020-07-05 15:45:20,614 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/unresolved-user on "system" connection.
2020-07-05 15:45:20,615 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/log-user-registry on "system" connection.
2020-07-05 15:45:20,617 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-1] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-4d552758-bc61-4fd2-8170-43a31d1643f6","userMap":{}}
2020-07-05 15:45:20,641 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-07-05 15:45:20,642 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-07-05 15:45:20,642 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-07-05 15:45:20,645 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-05 15:45:20,646 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-07-05 15:45:20,646 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-07-05 15:45:20,648 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-05 15:45:20,649 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status DOWN
2020-07-05 15:45:20,649 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593944120649, current=DOWN, previous=UP]
2020-07-05 15:45:20,649 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 15:45:20,650 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 15:45:20,650 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 15:45:20,650 INFO org.springframework.core.log.CompositeLog [main] Stopping...
2020-07-05 15:45:20,651 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=false, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69b37f5c]]]
2020-07-05 15:45:20,653 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 15:45:20,655 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] TCP connection to broker closed in session _system_
2020-07-05 15:45:20,655 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Cleaning up connection state for session _system_
2020-07-05 15:45:22,699 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69b37f5c]]
2020-07-05 15:45:22,699 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69b37f5c]]
2020-07-05 15:45:22,699 INFO org.springframework.core.log.CompositeLog [main] Stopped.
2020-07-05 15:45:22,699 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 15:45:22,699 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 15:45:22,795 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NoSuchMethodError: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics.close()V
2020-07-05 15:45:23,825 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'brokerChannelExecutor'
2020-07-05 15:45:23,826 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 15:45:23,826 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 15:45:23,827 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 15:45:23,828 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-07-05 15:45:26,830 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-07-05 15:45:26,838 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - deregister  status: 200
2020-07-05 15:45:26,843 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-07-05 15:45:26,846 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2020-07-05 16:21:50,218 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:21:50,378 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 16:21:50,890 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 16:21:50,972 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=21d1df55-3901-3083-a8ea-f4c69c74a35d
2020-07-05 16:21:51,056 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:21:51,057 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:21:51,058 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:21:51,059 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:21:51,180 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-07-05 16:21:51,186 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-07-05 16:21:51,187 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 16:21:51,187 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 16:21:51,258 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 16:21:51,259 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 872 ms
2020-07-05 16:21:51,380 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:21:51,380 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:21:51,387 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@670b3ca
2020-07-05 16:21:51,873 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:21:51,875 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:21:51,926 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:21:51,952 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'brokerChannelExecutor'
2020-07-05 16:21:52,068 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2da81754, org.springframework.security.web.context.SecurityContextPersistenceFilter@38f981b6, org.springframework.security.web.header.HeaderWriterFilter@4130a648, org.springframework.security.web.authentication.logout.LogoutFilter@3d8d17a3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@28279a49, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bbfc5ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@da4cf09, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f992a3a, org.springframework.security.web.session.SessionManagementFilter@2287395, org.springframework.security.web.access.ExceptionTranslationFilter@7741d346, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58fd1214]
2020-07-05 16:21:52,075 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:21:52,075 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:21:52,650 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-07-05 16:21:52,657 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-05 16:21:52,710 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-07-05 16:21:52,731 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-07-05 16:21:52,916 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-07-05 16:21:52,916 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-07-05 16:21:52,980 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-07-05 16:21:52,980 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-07-05 16:21:53,078 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-07-05 16:21:53,137 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-07-05 16:21:53,137 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-07-05 16:21:53,137 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-07-05 16:21:53,137 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-07-05 16:21:53,138 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-07-05 16:21:53,138 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-07-05 16:21:53,138 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-07-05 16:21:53,227 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-07-05 16:21:53,229 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-07-05 16:21:53,231 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 16:21:53,234 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1593946313233 with initial instances count: 3
2020-07-05 16:21:53,235 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status UP
2020-07-05 16:21:53,235 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593946313235, current=UP, previous=STARTING]
2020-07-05 16:21:53,237 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 16:21:53,237 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:21:53,237 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:21:53,238 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:21:53,238 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:21:53,238 INFO org.springframework.core.log.CompositeLog [main] Starting...
2020-07-05 16:21:53,238 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:21:53,238 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:21:53,249 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 16:21:53,258 INFO org.springframework.core.log.CompositeLog [main] Starting "system" session, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@794cb26b]]
2020-07-05 16:21:53,258 DEBUG org.springframework.core.log.CompositeLog [main] Forwarding CONNECT session=_system_
2020-07-05 16:21:53,271 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(1)-127.0.0.1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-05 16:21:53,271 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-127.0.0.1] Initializing Servlet 'dispatcherServlet'
2020-07-05 16:21:53,276 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-127.0.0.1] Completed initialization in 5 ms
2020-07-05 16:21:53,418 INFO org.springframework.core.log.CompositeLog [main] Started.
2020-07-05 16:21:53,430 DEBUG org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] Connected to localhost/127.0.0.1:61613
2020-07-05 16:21:53,431 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-3] TCP connection opened in session=_system_
2020-07-05 16:21:53,460 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Received CONNECTED heart-beat=[10000, 10000] session=_system_
2020-07-05 16:21:53,461 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] "System" session connected.
2020-07-05 16:21:53,462 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] BrokerAvailabilityEvent[available=true, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@794cb26b]]]
2020-07-05 16:21:53,463 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/unresolved-user on "system" connection.
2020-07-05 16:21:53,464 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/log-user-registry on "system" connection.
2020-07-05 16:21:53,465 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-1] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-53d545e6-2d5f-4606-9434-6a28059a1831","userMap":{}}
2020-07-05 16:21:53,480 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-07-05 16:21:53,482 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-07-05 16:21:53,482 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-07-05 16:21:53,483 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-07-05 16:21:53,485 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-05 16:21:53,486 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-07-05 16:21:53,486 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-07-05 16:21:53,488 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-05 16:21:53,488 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status DOWN
2020-07-05 16:21:53,489 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593946313489, current=DOWN, previous=UP]
2020-07-05 16:21:53,489 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 16:21:53,490 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:21:53,490 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:21:53,490 INFO org.springframework.core.log.CompositeLog [main] Stopping...
2020-07-05 16:21:53,490 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=false, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@794cb26b]]]
2020-07-05 16:21:53,491 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 16:21:53,493 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] TCP connection to broker closed in session _system_
2020-07-05 16:21:53,493 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Cleaning up connection state for session _system_
2020-07-05 16:21:55,539 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@794cb26b]]
2020-07-05 16:21:55,539 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@794cb26b]]
2020-07-05 16:21:55,539 INFO org.springframework.core.log.CompositeLog [main] Stopped.
2020-07-05 16:21:55,540 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:21:55,540 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:21:55,643 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NoSuchMethodError: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics.close()V
2020-07-05 16:21:56,671 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'brokerChannelExecutor'
2020-07-05 16:21:56,671 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:21:56,672 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:21:56,672 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:21:56,674 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-07-05 16:21:59,675 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-07-05 16:21:59,683 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - deregister  status: 200
2020-07-05 16:21:59,688 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-07-05 16:21:59,692 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2020-07-05 16:22:54,438 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:22:54,605 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 16:22:55,159 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 16:22:55,236 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=21d1df55-3901-3083-a8ea-f4c69c74a35d
2020-07-05 16:22:55,319 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:22:55,320 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:22:55,321 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:22:55,322 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:22:55,447 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8082 (http)
2020-07-05 16:22:55,451 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8082"]
2020-07-05 16:22:55,451 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 16:22:55,452 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 16:22:55,517 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 16:22:55,518 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 903 ms
2020-07-05 16:22:55,624 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:22:55,624 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:22:55,631 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16a9eb2e
2020-07-05 16:22:56,120 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:22:56,122 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:22:56,176 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:22:56,204 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'brokerChannelExecutor'
2020-07-05 16:22:56,327 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@750ed637, org.springframework.security.web.context.SecurityContextPersistenceFilter@52454457, org.springframework.security.web.header.HeaderWriterFilter@21de60a7, org.springframework.security.web.authentication.logout.LogoutFilter@789c3057, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f0bab7e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61ff6a49, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2287395, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5190010f, org.springframework.security.web.session.SessionManagementFilter@3ab35b9c, org.springframework.security.web.access.ExceptionTranslationFilter@799f916e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b2bf745]
2020-07-05 16:22:56,336 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:22:56,336 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:22:56,913 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-07-05 16:22:56,920 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-05 16:22:56,974 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-07-05 16:22:56,996 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-07-05 16:22:57,185 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-07-05 16:22:57,185 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-07-05 16:22:57,250 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-07-05 16:22:57,250 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-07-05 16:22:57,351 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-07-05 16:22:57,411 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-07-05 16:22:57,411 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-07-05 16:22:57,411 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-07-05 16:22:57,411 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-07-05 16:22:57,412 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-07-05 16:22:57,412 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-07-05 16:22:57,412 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-07-05 16:22:57,504 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-07-05 16:22:57,505 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-07-05 16:22:57,506 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 16:22:57,509 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1593946377508 with initial instances count: 3
2020-07-05 16:22:57,509 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status UP
2020-07-05 16:22:57,510 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593946377510, current=UP, previous=STARTING]
2020-07-05 16:22:57,511 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 16:22:57,511 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:22:57,512 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:22:57,512 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:22:57,512 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:22:57,512 INFO org.springframework.core.log.CompositeLog [main] Starting...
2020-07-05 16:22:57,512 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:22:57,512 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:22:57,528 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 16:22:57,530 INFO org.springframework.core.log.CompositeLog [main] Starting "system" session, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@4f7bb8df]]
2020-07-05 16:22:57,531 DEBUG org.springframework.core.log.CompositeLog [main] Forwarding CONNECT session=_system_
2020-07-05 16:22:57,685 INFO org.springframework.core.log.CompositeLog [main] Started.
2020-07-05 16:22:57,697 DEBUG org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] Connected to localhost/127.0.0.1:61613
2020-07-05 16:22:57,698 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-3] TCP connection opened in session=_system_
2020-07-05 16:22:57,725 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Received CONNECTED heart-beat=[10000, 10000] session=_system_
2020-07-05 16:22:57,726 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] "System" session connected.
2020-07-05 16:22:57,727 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] BrokerAvailabilityEvent[available=true, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@4f7bb8df]]]
2020-07-05 16:22:57,728 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/unresolved-user on "system" connection.
2020-07-05 16:22:57,729 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/log-user-registry on "system" connection.
2020-07-05 16:22:57,731 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-1] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-9f16c168-cff4-4f03-aac0-20e30df349fe","userMap":{}}
2020-07-05 16:22:57,755 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8082"]
2020-07-05 16:22:57,757 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8082"]
2020-07-05 16:22:57,757 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-07-05 16:22:57,760 WARN org.apache.juli.logging.DirectJDKLog [main] The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2020-07-05 16:22:57,761 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8082"]
2020-07-05 16:22:57,761 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8082"]
2020-07-05 16:22:57,763 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-07-05 16:22:57,763 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Unregistering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status DOWN
2020-07-05 16:22:57,764 WARN com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593946377764, current=DOWN, previous=UP]
2020-07-05 16:22:57,764 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082: registering service...
2020-07-05 16:22:57,765 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:22:57,765 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:22:57,765 INFO org.springframework.core.log.CompositeLog [main] Stopping...
2020-07-05 16:22:57,765 INFO org.springframework.core.log.CompositeLog [main] BrokerAvailabilityEvent[available=false, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@4f7bb8df]]]
2020-07-05 16:22:57,768 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - registration status: 204
2020-07-05 16:22:57,769 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] TCP connection to broker closed in session _system_
2020-07-05 16:22:57,769 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Cleaning up connection state for session _system_
2020-07-05 16:22:59,802 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@4f7bb8df]]
2020-07-05 16:22:59,802 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@4f7bb8df]]
2020-07-05 16:22:59,803 INFO org.springframework.core.log.CompositeLog [main] Stopped.
2020-07-05 16:22:59,803 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:22:59,803 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:22:59,905 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NoSuchMethodError: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics.close()V
2020-07-05 16:23:00,936 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'brokerChannelExecutor'
2020-07-05 16:23:00,936 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:23:00,937 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:23:00,937 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:23:00,939 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-07-05 16:23:03,941 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-07-05 16:23:03,949 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8082 - deregister  status: 200
2020-07-05 16:23:03,953 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-07-05 16:23:03,957 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2020-07-05 16:23:19,775 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:23:19,938 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-07-05 16:23:20,447 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-05 16:23:20,532 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=21d1df55-3901-3083-a8ea-f4c69c74a35d
2020-07-05 16:23:20,613 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:23:20,614 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:23:20,614 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:23:20,615 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-05 16:23:20,730 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8083 (http)
2020-07-05 16:23:20,735 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8083"]
2020-07-05 16:23:20,735 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-07-05 16:23:20,735 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-07-05 16:23:20,804 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-07-05 16:23:20,805 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 859 ms
2020-07-05 16:23:20,890 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:23:20,890 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:23:20,898 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@43f9dd56
2020-07-05 16:23:21,381 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:23:21,383 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:23:21,436 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:23:21,463 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'brokerChannelExecutor'
2020-07-05 16:23:21,575 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59fc6d05, org.springframework.security.web.context.SecurityContextPersistenceFilter@750f64fe, org.springframework.security.web.header.HeaderWriterFilter@5c53f292, org.springframework.security.web.authentication.logout.LogoutFilter@3bc69ce9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2f677247, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc165f6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45117dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78307a56, org.springframework.security.web.session.SessionManagementFilter@5c134052, org.springframework.security.web.access.ExceptionTranslationFilter@6fa2448b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e5eb20a]
2020-07-05 16:23:21,582 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-07-05 16:23:21,583 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 16:23:22,148 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [main] Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-07-05 16:23:22,156 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-05 16:23:22,210 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-07-05 16:23:22,231 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-07-05 16:23:22,400 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-07-05 16:23:22,401 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-07-05 16:23:22,466 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-07-05 16:23:22,466 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-07-05 16:23:22,568 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-07-05 16:23:22,630 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-07-05 16:23:22,630 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-07-05 16:23:22,630 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-07-05 16:23:22,630 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-07-05 16:23:22,631 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-07-05 16:23:22,631 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-07-05 16:23:22,631 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-07-05 16:23:22,728 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-07-05 16:23:22,729 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-07-05 16:23:22,731 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 16:23:22,733 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1593946402732 with initial instances count: 4
2020-07-05 16:23:22,734 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status UP
2020-07-05 16:23:22,734 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1593946402734, current=UP, previous=STARTING]
2020-07-05 16:23:22,735 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8083: registering service...
2020-07-05 16:23:22,736 DEBUG org.springframework.core.log.CompositeLog [main] clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:23:22,736 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:23:22,736 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:23:22,736 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:23:22,736 INFO org.springframework.core.log.CompositeLog [main] Starting...
2020-07-05 16:23:22,736 DEBUG org.springframework.core.log.CompositeLog [main] clientInboundChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:23:22,737 DEBUG org.springframework.core.log.CompositeLog [main] brokerChannel added StompBrokerRelay[localhost:61613]
2020-07-05 16:23:22,754 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8083 - registration status: 204
2020-07-05 16:23:22,755 INFO org.springframework.core.log.CompositeLog [main] Starting "system" session, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867]]
2020-07-05 16:23:22,755 DEBUG org.springframework.core.log.CompositeLog [main] Forwarding CONNECT session=_system_
2020-07-05 16:23:22,906 INFO org.springframework.core.log.CompositeLog [main] Started.
2020-07-05 16:23:22,917 DEBUG org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] Connected to localhost/127.0.0.1:61613
2020-07-05 16:23:22,918 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-3] TCP connection opened in session=_system_
2020-07-05 16:23:22,955 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Received CONNECTED heart-beat=[10000, 10000] session=_system_
2020-07-05 16:23:22,956 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] "System" session connected.
2020-07-05 16:23:22,957 INFO org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] BrokerAvailabilityEvent[available=true, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867]]]
2020-07-05 16:23:22,958 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/unresolved-user on "system" connection.
2020-07-05 16:23:22,959 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Subscribing to /topic/log-user-registry on "system" connection.
2020-07-05 16:23:22,961 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-1] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:23:22,982 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8083"]
2020-07-05 16:23:22,989 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8083 (http) with context path ''
2020-07-05 16:23:22,990 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8083
2020-07-05 16:23:23,142 INFO org.springframework.boot.StartupInfoLogger [main] Started DeviceMgmtApplication in 3.806 seconds (JVM running for 4.232)
2020-07-05 16:23:23,560 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(1)-127.0.0.1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-05 16:23:23,560 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-127.0.0.1] Initializing Servlet 'dispatcherServlet'
2020-07-05 16:23:23,564 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-127.0.0.1] Completed initialization in 4 ms
2020-07-05 16:23:32,965 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-2] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:23:42,968 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:23:52,971 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-2] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:02,974 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-1] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:12,977 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-5] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:21,464 INFO org.springframework.web.socket.config.WebSocketMessageBrokerStats [MessageBroker-4] WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[1 sessions, ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867] (available), processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 6]
2020-07-05 16:24:22,980 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:32,983 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:42,987 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:24:52,989 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:25:02,991 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:25:12,992 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:25:22,994 DEBUG org.springframework.core.log.CompositeLog [MessageBroker-3] Forwarding SEND /topic/log-user-registry session=_system_ application/json payload={"id":"192.168.1.9-30f27012-f1c7-44ce-8c39-c8cbebcd8fd6","userMap":{}}
2020-07-05 16:25:29,393 INFO org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [RMI TCP Connection(3)-127.0.0.1] Application shutdown requested.
2020-07-05 16:25:29,394 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [RMI TCP Connection(3)-127.0.0.1] Unregistering application DEVICE-MANAGEMENT-SERVICE-1 with eureka with status DOWN
2020-07-05 16:25:29,394 WARN com.netflix.discovery.DiscoveryClient$3 [RMI TCP Connection(3)-127.0.0.1] Saw local status change event StatusChangeEvent [timestamp=1593946529394, current=DOWN, previous=UP]
2020-07-05 16:25:29,394 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8083: registering service...
2020-07-05 16:25:29,396 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2020-07-05 16:25:29,397 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2020-07-05 16:25:29,397 INFO org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] Stopping...
2020-07-05 16:25:29,397 INFO org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] BrokerAvailabilityEvent[available=false, StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867]]]
2020-07-05 16:25:29,398 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8083 - registration status: 204
2020-07-05 16:25:29,402 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] TCP connection to broker closed in session _system_
2020-07-05 16:25:29,402 DEBUG org.springframework.core.log.CompositeLog [tcp-client-scheduler-4] Cleaning up connection state for session _system_
2020-07-05 16:25:29,406 INFO org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] TCP connection failure in session _system_: Failed to connect: null
java.nio.channels.ClosedChannelException: null
	at io.netty.channel.nio.AbstractNioChannel.doClose(AbstractNioChannel.java:502)
	at io.netty.channel.socket.nio.NioSocketChannel.doClose(NioSocketChannel.java:342)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:760)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:737)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:608)
	at io.netty.channel.nio.NioEventLoop.closeAll(NioEventLoop.java:748)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:527)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-07-05 16:25:29,407 DEBUG org.springframework.core.log.CompositeLog [tcp-client-loop-nio-1] Cleaning up connection state for session _system_
2020-07-05 16:25:31,421 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] clientInboundChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867]]
2020-07-05 16:25:31,421 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] brokerChannel removed StompBrokerRelay[ReactorNettyTcpClient[reactor.netty.tcp.TcpClientDoOn@69a73867]]
2020-07-05 16:25:31,422 INFO org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] Stopped.
2020-07-05 16:25:31,422 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:25:31,422 DEBUG org.springframework.core.log.CompositeLog [RMI TCP Connection(3)-127.0.0.1] brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2020-07-05 16:25:31,569 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [RMI TCP Connection(3)-127.0.0.1] Invocation of destroy method failed on bean with name 'tomcatMetricsBinder': java.lang.NoSuchMethodError: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics.close()V
2020-07-05 16:25:32,593 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(3)-127.0.0.1] Shutting down ExecutorService 'brokerChannelExecutor'
2020-07-05 16:25:32,594 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(3)-127.0.0.1] Shutting down ExecutorService 'messageBrokerTaskScheduler'
2020-07-05 16:25:32,595 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(3)-127.0.0.1] Shutting down ExecutorService 'clientOutboundChannelExecutor'
2020-07-05 16:25:32,595 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [RMI TCP Connection(3)-127.0.0.1] Shutting down ExecutorService 'clientInboundChannelExecutor'
2020-07-05 16:25:32,597 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(3)-127.0.0.1] Shutting down DiscoveryClient ...
2020-07-05 16:25:35,598 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(3)-127.0.0.1] Unregistering ...
2020-07-05 16:25:35,606 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(3)-127.0.0.1] DiscoveryClient_DEVICE-MANAGEMENT-SERVICE-1/host.docker.internal:device-management-service-1:8083 - deregister  status: 200
2020-07-05 16:25:35,612 INFO com.netflix.discovery.DiscoveryClient [RMI TCP Connection(3)-127.0.0.1] Completed shut down of DiscoveryClient
2020-07-05 16:25:35,613 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-127.0.0.1] Pausing ProtocolHandler ["http-nio-8083"]
2020-07-05 16:25:35,661 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-127.0.0.1] Stopping service [Tomcat]
2020-07-05 16:25:35,662 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-127.0.0.1] Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-07-05 16:25:35,664 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-127.0.0.1] Stopping ProtocolHandler ["http-nio-8083"]
2020-07-05 16:25:35,666 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-127.0.0.1] Destroying ProtocolHandler ["http-nio-8083"]
